<?xml version="1.0"?>
<launch>
  <arg name="mapname" default="rik_bananas" />
  <arg name="mapfolder" default="$(env HOME)/maps"/>
  <arg name="script_args" default=""/>
  <arg name="ia_downsampling_passes" default="3"/>

  <arg name="localization" default="true"/>


  <!-- Gmapping & Map Matching -->
  <include file="$(find asl_pepper_gmapping)/launch/gmapping.launch" if="$(arg localization)">
    <arg name="output" value="log"/>
  </include>
  <include file="$(find map_matcher)/launch/map_matcher.launch" if="$(arg localization)">
    <arg name="output" value="log" />
    <arg name="slam_map_topic" value="/gmap"/>
    <arg name="reference_map_name" value="$(arg mapname)"/>
    <arg name="maps_folder" value="$(arg mapfolder)"/>
    <arg name="launch_prefix" value="nice -n 20" />
  </include>
  <!-- Otherwise just publish reference map -->
  <node pkg="map_server" type="map_server" name="ref_map_server"
    args="$(arg mapfolder)/$(arg mapname).yaml" if="$(eval arg('localization') != true)">
    <param name="frame_id" value="reference_map" />
    <remap from="/map" to="/reference_map"/>
  </node>

  <!-- Global Path Planning -->
<!--   <node pkg="asl_pepper_motion_planning" type="global_planner" -->
<!--     name="global_planner" args="" output="log" > -->
<!--     <param name="reference_map_name" value="$(arg mapname)"/> -->
<!--     <param name="reference_map_folder" value="$(arg mapfolder)"/> -->
<!--   </node> -->

  <!-- Framesoft tracking -->
  <include file="$(find rwth_crowdbot_launch)/launch/rwth_crowdbot_launch.launch">
  </include>

  <!-- ia planner -->
  <node pkg="ia_ros" type="ros_ia_node" name="ia_planner" output="screen"
    args="$(arg script_args)" launch-prefix="" >
<!--     args="$(arg script_args)" launch-prefix="nice -n 10" > -->
    <remap from="/tracked_persons" to="/rwth_tracker/tracked_persons" />
    <param name="reference_map_name" value="$(arg mapname)"/>
    <param name="reference_map_downsampling_passes" value="$(arg ia_downsampling_passes)"/>
  </node>

  <!-- Skill Planners -->
  <!-- _________________________________________________________________________________ -->

  <!-- Responsive -->
  <node pkg="responsive" type="responsive" name="responsive" output="screen"
    args="--forward-only">
    <remap from="/stop_autonomous_motion" to="/responsive/stop_autonomous_motion" />
    <remap from="/resume_autonomous_motion" to="/responsive/resume_autonomous_motion" />
    <remap from="/global_planner/current_waypoint" to="/responsive/waypoint" />
  </node>


  <!-- EPFL Reactive -->
<!--   <node name="rds_gui_ros_node" pkg="rds_gui_ros" type="rds_holonomic_gui_ros_node" /> -->
  <node name="rds_ros" pkg="rds_ros" type="rds_holonomic_ros_node" >
    <remap from="/laserscan" to="/combined_scan" />
  </node>
  <node name="rds_pepper_client" pkg="rds_ros" type="rds_pepper_client" output="screen"
    args="">
    <remap from="/stop_autonomous_motion" to="/epfl_planner/stop_autonomous_motion" />
    <remap from="/resume_autonomous_motion" to="/epfl_planner/resume_autonomous_motion" />
    <remap from="/global_planner/current_waypoint" to="/epfl_planner/waypoint" />
   </node>

  <!-- RVO Planner -->
  <node pkg="asl_pepper_motion_planning" type="rvo_planner" name="rvo_planner" output="screen"
    args="">
<!--     <param name="reference_map_name" value="/gmap"/> -->
<!--     <param name="reference_map_folder" value="rostopic"/> -->
<!--     <param name="reference_map_frame" value="gmap"/> -->
    <param name="reference_map_name" value="$(arg mapname)"/>
    <param name="reference_map_folder" value="$(arg mapfolder)"/>
    <param name="reference_map_frame" value="reference_map"/>
    <param name="fixed_frame" value="odom"/>
    <param name="reference_map_downsampling_passes" value="1" />
    <param name="static_obstacles_max_distance" value="2" />
    <remap from="/stop_autonomous_motion" to="/rvo_planner/stop_autonomous_motion" />
    <remap from="/resume_autonomous_motion" to="/rvo_planner/resume_autonomous_motion" />
    <remap from="/global_planner/current_waypoint" to="/rvo_planner/waypoint" />
  </node>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(env HOME)/.rviz/ia.rviz" output="log"/>
</launch>


