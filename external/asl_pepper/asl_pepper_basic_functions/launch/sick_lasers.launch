<?xml version="1.0"?>
<launch>
  <!--
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find sick_scan)/urdf/example.urdf.xacro'" />
  <node pkg="tf" type="static_transform_publisher" name="scanner1_to_map" args="0 0 0 0 0 0 map laser_1 100" />
  <node pkg="tf" type="static_transform_publisher" name="scanner2_to_map" args="2 0 0 0 0 0 map laser_2 100" />
  -->

  <node name="sick_laser_front" pkg="sick_scan" type="sick_generic_caller"  respawn="true" output="screen">
    <param name="scanner_type" type="string" value="sick_tim_5xx" />
    <param name="frame_id" type="string" value="sick_laser_front"/>
    <param name="min_ang" type="double" value="-2.35619449" /><!-- -135째 -->
    <param name="max_ang" type="double" value="2.35619449" /><!-- 135째 -->
    <param name="range_max" type="double" value="100.0" />
    <param name="intensity" type="bool" value="True" />
    <param name="hostname" type="string" value="10.42.0.3" />
    <param name="port" type="string" value="2112" />
    <param name="timelimit" type="int" value="5" />
    <remap from="scan" to="sick_laser_front/scan" />
    <remap from="cloud" to="sick_laser_front/cloud" />
  </node>

  <node name="sick_laser_rear" pkg="sick_scan" type="sick_generic_caller"  respawn="true" output="screen">
    <param name="scanner_type" type="string" value="sick_tim_5xx" />
    <param name="frame_id" type="string" value="sick_laser_rear"/>
    <param name="min_ang" type="double" value="-2.35619449" /><!-- -135째 -->
    <param name="max_ang" type="double" value="2.35619449" /><!-- 135째 -->
    <param name="range_max" type="double" value="100.0" />
    <param name="intensity" type="bool" value="True" />
    <param name="hostname" type="string" value="10.42.0.2" />
    <param name="port" type="string" value="2112" />
    <param name="timelimit" type="int" value="5" />
    <remap from="scan" to="sick_laser_rear/scan" />
    <remap from="cloud" to="sick_laser_rear/cloud" />
  </node>

  <!-- Crop laser scans -->
  <!--
  <include file="$(find asl_pepper_sensor_preprocessing)/launch/crop_laser_scans.launch">
  </include>
  -->
  <!-- Filter laser scans -->
  <include file="$(find asl_pepper_sensor_preprocessing)/launch/filter_laser_scans.launch">
  </include>

  <!-- Combine laser scans -->
  <include file="$(find asl_pepper_sensor_preprocessing)/launch/combine_laser_scans.launch">
  </include>

</launch>
